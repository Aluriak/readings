# Readings
Search and aggregate things to read, directly from [Writing Prompts subreddit](https://www.reddit.com/r/WritingPrompts).

To end-user, Writing Prompts subreddit's submissions are *topics*, and top-level comments are *stories*.

This python code allow to automatically retrieves stories from reddit, and print them in the terminal or in the web browser.
Further developpments should allow end users to send content to [pocket](https://getpocket.com/).


## Long-term goal
Have a way to send automatically to my terminal (or my reader device if i'm using it) all a subset of stories of WP
(involving a tree or an AI if it's friday or wednesday), on a daily basis, and tag them using text mining and summarization,
allowing me to retrieve them quickly if necessary.



## Installation
Readings is using [PRAW](http://praw.readthedocs.io/) to parse reddit, and [docopt](https://docopt.org) to parse CLI.

In a python 3 [virtualenv](https://virtualenv.pypa.io/en/stable/):

    pip install requirements.txt

or

    pip3 install requirements.txt

depending of your environment.




## Usage
Currently, there is only CLI (terminal) and API (programming), as described in the following.

### CLI
Documentation:

    python -m readings --help

The CLI is quite limited compared to the API, but can fullfil basic job, like all 500+ scored stories in terminal:

    python -m readings term --min-score=500


### API
There is not external doc for API. You can see it in action in the [main package file](readings/__main__.py),
and read the source code, especially the part where [reader preferences are defined](readings/wrappers.py).




## Features

- [X] automatic search in Writing Prompts
- [X] locally save already read stories
- [ ] â€¦ using a sqlite database instead of json
- [ ] save stories with a user note and tags
- [X] basic CLI
- [X] wrap text when reading in terminal
- [ ] correct handling of user commands
    - [ ] next story of same topic
    - [ ] change topic
    - [X] mark story as read
    - [X] next story, depending of reader preferences
- [ ] heuristic to detect when author respond to himself in order to [continue the story](https://www.reddit.com/r/WritingPrompts/comments/5zrfwi/wp_joe_had_a_boring_family_a_pointless_job_a/df0qnbp/)
- [ ] export story
    - [ ] pocket
    - [ ] pdf
    - [X] html (browser)
    - [X] txt (terminal)
- [ ] decoupling of stories collections and choice for user
- [ ] support reading configuration
    - [X] minimal score/upvote (ratio) of proposed stories
    - [ ] golded first
    - [ ] gives topic before or after
    - [X] topic order: follow the subreddit history or get the latest submitted (see time frame)
    - [X] time frame: get stories of last hour/day/week
    - [ ] subject limitation: need some text mining to filter in/out subjects
    - [X] minimal size (in line/char)
- [ ] support both reddit API
    - [X] [application](http://praw.readthedocs.io/en/latest/getting_started/authentication.html#installed-application), allowing anyone to use this code
    - [ ] [script](http://praw.readthedocs.io/en/latest/getting_started/authentication.html#script-application), allowing registered users to react on the channel.
